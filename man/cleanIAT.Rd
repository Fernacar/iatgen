% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iatgen.R
\name{cleanIAT}
\alias{cleanIAT}
\title{Data analysis function: Processes and cleans raw IAT data}
\usage{
cleanIAT(prac1, crit1, prac2, crit2, timeout.drop = TRUE,
  timeout.ms = 10000, fasttrial.drop = FALSE, fasttrial.ms = 400,
  fastprt.drop = TRUE, fastprt.percent = 0.1, fastprt.ms = 300,
  error.penalty = FALSE, error.penalty.ms = 600)
}
\arguments{
\item{timeout.drop}{Optional (set \code{TRUE} by default). Tells the procedure to drop trials over a certain duration; recommended by Greenwald et al. (2003).}

\item{timeout.ms}{Optional (set by default). Following the D600 procedure, individual trials over 10,000 ms are dropped (scored as missing). This is the default option but can be manually changed to any desired value. Ignored if \code{timeout.drop=FALSE}.}

\item{fastprt.drop}{Optional (set \code{TRUE} by default). Following the D600 procedure, participants who have too many responses faster than 300 ms are not scored. Some alternative scoring procedures do not use this feature (e.g., for single-category IATs), so it can be disabled by setting this option to \code{FALSE}. Note that this is highly recommended, as participants who wish to skip the IAT may press the keys as rapidly as possible.}

\item{fastprt.percent}{Optional (set \code{.10} default). If \code{fastprt.drop=TRUE}, then \code{cleanIAT} needs to know what percentage of responses must be below the threshold to disqualify a participant. Following Greenwald et al. (2003), this is 10 percent but can be adjusted here.}

\item{fastprt.ms}{Optional (set by default). If \code{fastprt.drop=TRUE}, then the user can change the threshold for the rapid response parameter used to disqualify participants. By default, this is 300 ms but can be changed here.}

\item{error.penalty}{Optional (set by default at \code{error.penalty=FALSE}). If users are not fored to correct errors, an error penalty is imposed as recommended by Greenwald et al. (2003).}

\item{error.penalty.ms}{Optional (set by default at \code{error.penalty.ms=600}). Following the D600 procedure, IAT errors are scored as the correct-trial block mean plus an error penalty of 600 ms. This is the default option but can be manually changed to any desired value or disabled by setting it to zero. One can also use the 2SD penalty [Greenwald et al., 2003, p 214, right column] by setting  \code{error.penalty.ms="2SD"}.}

\item{data}{A vector of responses, one per participant. This data vector represents one of the two critical blocks of the IAT. Because the two critical blocks are cleaned separately, this function will need to be run twice before the full IAT can be scored. Note that this raw data does not naturally occur in the dataset; because there exist several permutations of the IAT, the raw data will be scattered across IAT permutations and will need to be aggregated into a vector representing either the congruent or incongruent block, which is done using the function such as \code{combineIATfourblocks()} prior to running this function. Within the data vector, each response represents several trials per participant in a comma-separated text format (for each trial: indicating stimulus, correctness, and latency in milliseconds). The block ends with "\code{END}." For example, "\code{02C423, 01C541, 03X133, END}" would be a block with three responses consisting of stimuli 2,1, and 3 with  latencies of 423, 541, and 133 ms. The first two trials were correct but the third was incorrect.}
}
\value{
Returns a list containing several important elements. 
\code{skipped} is a vector indicating whether the participant completed the IAT or skipped it. 
\code{total.trials} is a single number, the total number of total trials completed in the study. This is used to recalculate rates by other functions when examining multiple blocks at once.
\code{num.raw.trials} is a vector of the raw number of trials (including those scored as missing in data cleaning) per participant. 
\code{raw.latencies} is a dataframe of the raw latencies prior to any data cleaning.
\code{raw.stim.number} is a dataframe indicating which stimuli were presented in each trial prior to any data cleaning. Consult the JavaScript in Qualtrics for any IAT block to match stimuli numbers to content. 
\code{raw.correct} is a dataframe indicating whether each response is correct or incorrect prior to any data cleaning.
\code{timeout.drop} logical value stating whether this feature was enabled in the function call, reported here (see above).
\code{timeout.ms} is the single number specified in the function call, reported here (see above).
\code{num.timeout.removed} is a vector indicating the number of responses per participant that were scored as missing due to timeouts.
\code{timeout.rate} is a vector indicating the percentage of responses per participant that were scored as missing due to timeouts.
\code{fasttrial.drop} logical value stating whether this feature was enabled in the function call, reported here (see above).
\code{fasttrial.ms} is the single number specified in the function call, reported here (see above).
\code{num.fasttrial.removed} is a vector indicating the number of responses per participant that were scored as missing due to rapid speeds. Note that if participant dropping is enabled, this will report redundant information (i.e., this will report trials that are included among the dropped participants). This provides a more accurate reporting value.
\code{fasttrial.rate} is a vector indicating the percentage of responses per participant that were scored as missing due to rapid speeds.
\code{fastprt.drop} is either TRUE or FALSE as specified by the function call, reported here (see above).
\code{fastprt.ms} is a single number specified in the function call, reported here (see above).
\code{fastprt.percent} is a single number specified in the function call, reported here (see above).
\code{drop.participant} is a logical vector indicating whether the participant's responses have been dropped due to excessive fast responses. Note that for these purposes, fast trials are not removed (otherwise it would be impossible to drop a participant). Thus, \code{drop.participant} may report information redundant to \code{fasttrial} output, above.
\code{error.penalty} is a single number or character value specified in the function call, reported here (see above).
\code{error.num} is a vector of the number of erroneous trials per participant (after data cleaning / dropping is complete).
\code{error.rate} is a vector of the percentage of trials that are erroneous per participant (after data cleaning / dropping is complete). 
\code{num.clean.trials} is a vector of the number of clean trials per participant (after data cleaning / dropping is complete).
\code{clean.latencies} is a dataframe of clean response latencies (after data cleaning / dropping is complete).
\code{clean.correct} is a dataframe indicating whether each response is correct or incorrect (after data cleaning / dropping is complete).
\code{clean.stim.number} is a matrix indicating which stimuli were presented in each trial (after data cleaning / dropping is complete).
\code{clean.std} is a vector of block standard deviations, one per participant (after data cleaning / dropping is complete). This follows the original syntax used by Greenwald et al. (2003).
\code{clean.means} is a vector of block means of clean latencies, one per participant (after data cleaning / dropping is complete).
}
\description{
Prior to running, please see \code{combineIATfourblocks()}. This function processes and cleans raw IAT data in preparation for IAT scoring and analysis functions but does not include practice trials. \bold{Note that we highly recommend that users include practice blocks (see} \code{cleanIAT.prac()}\bold{).} By default, the function implements the D600 cleaning procedures (Greenwald et al., 2003, p 214, center column). The function accepts as an input a vector of IAT responses (see \code{data}, below). It returns a list containing a variety of IAT variables, including matrices of clean latencies and other information. These lists should be saved and used as the main arguments for all other IAT analysis functions. To fully score the IAT without practice blocks, this function must be run twice -- once on the 'congruent' (A+Pos, B+Neg) block and once on the 'incongruent' (A+Neg, B+Pos) block. (See Example, below). Details of the function procedure are given here. The function first drops any trials that are beyond the timeout limit (if \code{timeout.drop=TRUE}, which is enabled by default). The default timeout limit is 10,000 ms but can be changed by setting \code{timeout.ms} to a value other than 10000. For users who wish to exclude individual trials less than 400 ms (or other values), one can also set \code{fasttrial.drop=TRUE} and then set \code{fasttrial.ms=400} or any other desired value. (This enables users to use D2SD [Greenwald et al., 2003, p 214, right column] or other scoring algorithms). Next, the function drops participants entirely (scores as missing) if more than 10% of responses are less than 300 ms (if \code{fastprt.drop=TRUE}, which is enabled by default). Users can modify the percentage and speed for this drop feature by changing \code{fastprt.percent=.10} to a different proportion or \code{fastprt.ms=300} to a speed other than 300 ms. Finally, the function imposes an error penalty; by default this follows the D600 procedure of using correct block means + 600 ms (\code{error.penalty=600}, but this can be set to any numeric value or disabled by setting it to \code{error.penalty=0}. If users wish to use the "2 SD" error penalty based on correct trials (D2SD algorithm; Greenwald et al., 2003, p 214, right column), one should set \code{error.penalty="2SD"} (be sure to include the quotation marks).
}
\examples{
\dontrun{
### Clean the IAT USING THE D600 PROECEDURE### 
congruent.clean <- cleanIAT(congruent)
incongruent.clean <- cleanIAT(incongruent)

### Clean the IAT USING THE D600 PROCEDURE DROPPING TRIALS UNDER 400 MS### 
congruent.clean <- cleanIAT(congruent, fasttrial.drop=TRUE, fasttrial.ms=400)
incongruent.clean <- cleanIAT(incongruent, fasttrial.drop=TRUE, fasttrial.ms=400)

### Clean the IAT USING THE D2SD PROCEDURE WITH TRIALS UNDER 400 MS DROPPED### 
congruent.clean <- cleanIAT(congruent, error.penalty="2SD", fasttrial.drop=TRUE, fasttrial.ms=400)
incongruent.clean <- cleanIAT(incongruent, error.penalty="2SD", fasttrial.drop=TRUE, fasttrial.ms=400)

### Clean the IAT USING THE BUILT IN ERROR PENALTY FOR FORCED-ERROR CORRECTION### 
congruent.clean <- cleanIAT(congruent, error.penalty=0)
incongruent.clean <- cleanIAT(incongruent, error.penalty=0)

}
}

